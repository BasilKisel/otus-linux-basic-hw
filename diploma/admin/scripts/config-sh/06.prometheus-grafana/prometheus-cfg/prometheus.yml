# Sample config for Prometheus.

global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'example'

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets: ['localhost:9093']

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  # Here it's Prometheus itself.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    scrape_timeout: 5s

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

  - job_name: node
    # If prometheus-node-exporter is installed, grab stats about the local
    # machine by default.
    static_configs:
      - targets:
        - '192.168.1.12:9100' # nfs server
        - '192.168.1.13:9100' # mysql-source
        - '192.168.1.14:9100' # mysql-replica
        - '192.168.1.15:9100' # web-app-nd1
        - '192.168.1.16:9100' # web-app-nd2
        - '192.168.1.17:9100' # nginx reverse proxy
        - 'localhost:9100'    # 192.168.1.18:9100 - prometheus itself
        - '192.168.1.19:9100' # elk stack

  - job_name: nginx
    static_configs:
      - targets: ['192.168.1.17:9113']
